spring:
  application:
    name: regtech
  profiles:
    active: development
  datasource:
    url: jdbc:h2:mem:regtech;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;INIT=CREATE SCHEMA IF NOT EXISTS billing\;CREATE SCHEMA IF NOT EXISTS iam
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    show-sql: false
  flyway:
    enabled: false
  h2:
    console:
      enabled: true
      path: /h2-console
  docker:
    compose:
      enabled: false

# IAM Module Configuration
iam:
  security:
    jwt:
      secret: mySecretKey123456789012345678901234567890123456789012345678901234567890
      expiration: 86400 # 24 hours in seconds
    password:
      min-length: 12
      require-uppercase: true
      require-lowercase: true
      require-digits: true
      require-special-chars: true
    oauth2:
      google:
        client-id: ${GOOGLE_CLIENT_ID:}
        client-secret: ${GOOGLE_CLIENT_SECRET:}
      facebook:
        client-id: ${FACEBOOK_CLIENT_ID:}
        client-secret: ${FACEBOOK_CLIENT_SECRET:}

  authorization:
    cache:
      enabled: true
      ttl: 300 # 5 minutes
    multi-tenant:
      enabled: true
      default-organization: "default-org"
    permissions:
      strict-mode: true
      audit-enabled: true

# Billing Module Configuration
billing:
  stripe:
    apiKey: pk_test_51SHmgAF6vJewYjaQfxe0EYHZUA8pFRxRu6qR9O3aB9Dv51kch6GFFiyXhcS3vHriDawpdoroYezTNgmMtT81fLnW00FVA3VlLg
    webhookSecret: whsec_dummy_secret_for_development

  tiers:
    starter:
      monthlyPrice: 29.99
      currency: USD
      exposureLimit: 1000

  dunning:
    reminderIntervals:
      step1: 7
      step2: 14
      step3: 21
    finalActionDelay: 30

  invoices:
    dueDays: 30
    currency: USD

  billingCycle:
    timezone: America/New_York
    billingDay: 1

  outbox:
    enabled: true
    processingInterval: 30000
    retryInterval: 60000
    maxRetries: 3
    cleanupInterval: 86400000
    cleanupRetentionDays: 30

  scheduling:
    monthlyBilling:
      enabled: true
      cron: "0 0 1 * *"
      timezone: America/New_York
    dunningProcess:
      enabled: true
      cron: "0 0 2 * *"
      timezone: America/New_York
      threadPoolSize: 5

  notifications:
    email:
      enabled: true
      templates:
        payment_reminder: "payment-reminder.html"
        payment_failed: "payment-failed.html"
        subscription_cancelled: "subscription-cancelled.html"
    sms:
      enabled: false
    push:
      enabled: false

# Stripe Configuration (used by StripeService)
stripe:
  api:
    key: sk_test_dummy_key_for_development
  webhook:
    secret: whsec_dummy_secret_for_development

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  health:
    diskspace:
      enabled: true

logging:
  # Logback configuration file for structured logging
  config: classpath:logback-spring.xml

  level:
    com.bcbs239.regtech: INFO
    # Event processing components
    com.bcbs239.regtech.core.events: INFO
    com.bcbs239.regtech.core.inbox: INFO
    com.bcbs239.regtech.core.outbox: INFO
    # Bounded contexts
    com.bcbs239.regtech.iam: INFO
    com.bcbs239.regtech.billing: INFO
    # Spring framework
    org.springframework.security: WARN
    org.springframework: WARN
    org.springframework.scheduling: INFO
    # Database
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN

  # For GCP deployment, set SPRING_PROFILES_ACTIVE=gcp to enable JSON structured logging
  # This will automatically use the GCP_JSON appender in logback-spring.xml
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

---
spring:
  config:
    activate:
      on-profile: gcp

logging:
  # GCP profile enables JSON structured logging for Google Cloud Logging
  level:
    com.bcbs239.regtech: INFO
    # Increase verbosity for event processing in GCP
    com.bcbs239.regtech.core.events: DEBUG
    com.bcbs239.regtech.core.inbox: DEBUG
    com.bcbs239.regtech.core.outbox: DEBUG