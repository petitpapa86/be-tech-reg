# Billing Module Production Profile Configuration
spring:
  datasource:
    # PostgreSQL database for production
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:regtech_billing}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:regtech_billing_user}
    password: ${DB_PASSWORD}
    
    # Connection pool configuration for production
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: BillingHikariCP
      
  jpa:
    hibernate:
      ddl-auto: validate # Never auto-create/update schema in production
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: true # Prevent accidental data loss

billing:
  stripe:
    # Stripe live API keys for production (must be provided via environment variables)
    api-key: ${STRIPE_LIVE_API_KEY}
    webhook-secret: ${STRIPE_LIVE_WEBHOOK_SECRET}
    
  # Production-specific configuration
  outbox:
    enabled: true
    processing-interval: 30000 # 30 seconds
    retry-interval: 120000 # 2 minutes
    cleanup-interval: 86400000 # 24 hours
    cleanup-retention-days: 7 # Keep 7 days for audit
    max-retries: 3
    
  scheduling:
    monthly-billing:
      enabled: true
      cron: "0 0 0 1 * ?" # First day of month at midnight UTC
      timezone: "UTC"
    dunning-process:
      enabled: true
      cron: "0 0 9 * * ?" # Daily at 9 AM UTC
      timezone: "UTC"
      thread-pool-size: 5
      
  notifications:
    email:
      enabled: true
      templates:
        first-reminder: "billing-first-reminder"
        second-reminder: "billing-second-reminder"
        final-notice: "billing-final-notice"
        suspension-notice: "billing-suspension-notice"
    sms:
      enabled: false # Can be enabled when SMS service is implemented
    push:
      enabled: false # Can be enabled when push service is implemented

# Production logging configuration
logging:
  level:
    com.bcbs239.regtech.billing: INFO
    com.stripe: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.springframework.transaction: WARN
    org.springframework.security: WARN
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    
  file:
    name: /var/log/regtech/billing.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 1GB

# Production actuator endpoints (restricted)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
  security:
    enabled: true
    
# Production security configuration
server:
  error:
    include-stacktrace: never
    include-message: never
    include-binding-errors: never
    
# Production-specific environment validation
billing-validation:
  required-env-vars:
    - STRIPE_LIVE_API_KEY
    - STRIPE_LIVE_WEBHOOK_SECRET
    - DB_PASSWORD
    - DB_HOST
    - DB_NAME
    - DB_USERNAME